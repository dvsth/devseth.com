{"id":"src/shaders/VertexLitParticle.js","dependencies":[{"name":"C:\\Users\\Dev\\Desktop\\Code\\devseth.com\\package.json","includedInParent":true,"mtime":1622667897762},{"name":"three","loc":{"line":1,"column":43},"parent":"C:\\Users\\Dev\\Desktop\\Code\\devseth.com\\src\\shaders\\VertexLitParticle.js","resolved":"C:\\Users\\Dev\\Desktop\\Code\\devseth.com\\node_modules\\three\\build\\three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _three = require(\"three\");\n\nvar _default = function _default() {\n  return {\n    lights: true,\n    uniforms: _three.UniformsUtils.merge([_three.UniformsLib['lights'], {\n      pointSize: {\n        value: 2.0\n      },\n      decayModifier: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: \"\\n    #include <common>\\n\\n    struct PointLight {\\n      vec3 position;\\n      vec3 color;\\n      float distance;\\n      float decay;\\n      int shadow;\\n      float shadowBias;\\n      float shadowRadius;\\n      vec2 shadowMapSize;\\n      float shadowCameraNear;\\n      float shadowCameraFar;\\n    };\\n\\n    uniform PointLight pointLights[NUM_POINT_LIGHTS];\\n    uniform float pointSize;\\n    uniform float decayModifier;\\n\\n    varying vec4 vColor;\\n\\n    float _punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n    \\tif( decayExponent > 0.0 ) {\\n    \\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n    \\t}\\n    \\treturn 1.0;\\n    }\\n\\n    void main()\\n    {\\n      vec4 worldPosition = modelMatrix * vec4(position, 1.0);\\n      vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\\n      gl_Position = projectionMatrix * modelViewPosition;\\n\\n      gl_PointSize = pointSize;\\n      vec4 addedLights = vec4(0.1, 0.1, 0.1, 1.0);\\n      for(int l = 0; l < NUM_POINT_LIGHTS; l++) {\\n        float dist = distance(pointLights[l].position, modelViewPosition.xyz);\\n        addedLights.rgb += pointLights[l].color *\\n        _punctualLightIntensityToIrradianceFactor(\\n            dist,\\n            pointLights[l].distance,\\n            pointLights[l].decay * decayModifier\\n          );\\n      }\\n      vColor = addedLights;\\n    }\\n  \",\n    fragmentShader: \"\\n    varying vec4 vColor;\\n\\n    void main() {\\n      gl_FragColor = vColor;\\n    }\\n  \"\n  };\n};\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":15},"source":"src/shaders/VertexLitParticle.js","original":{"line":3,"column":15}},{"generated":{"line":11,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":3,"column":15}},{"generated":{"line":11,"column":9},"source":"src/shaders/VertexLitParticle.js","original":{"line":3,"column":22}},{"name":"lights","generated":{"line":12,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":4,"column":2}},{"name":"lights","generated":{"line":12,"column":4},"source":"src/shaders/VertexLitParticle.js","original":{"line":4,"column":2}},{"generated":{"line":12,"column":10},"source":"src/shaders/VertexLitParticle.js","original":{"line":4,"column":8}},{"generated":{"line":12,"column":12},"source":"src/shaders/VertexLitParticle.js","original":{"line":4,"column":10}},{"generated":{"line":12,"column":16},"source":"src/shaders/VertexLitParticle.js","original":{"line":3,"column":22}},{"name":"uniforms","generated":{"line":13,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":5,"column":2}},{"name":"uniforms","generated":{"line":13,"column":4},"source":"src/shaders/VertexLitParticle.js","original":{"line":5,"column":2}},{"generated":{"line":13,"column":12},"source":"src/shaders/VertexLitParticle.js","original":{"line":5,"column":10}},{"name":"UniformsUtils","generated":{"line":13,"column":14},"source":"src/shaders/VertexLitParticle.js","original":{"line":5,"column":12}},{"name":"merge","generated":{"line":13,"column":35},"source":"src/shaders/VertexLitParticle.js","original":{"line":5,"column":26}},{"generated":{"line":13,"column":40},"source":"src/shaders/VertexLitParticle.js","original":{"line":5,"column":12}},{"generated":{"line":13,"column":41},"source":"src/shaders/VertexLitParticle.js","original":{"line":5,"column":32}},{"name":"UniformsLib","generated":{"line":13,"column":42},"source":"src/shaders/VertexLitParticle.js","original":{"line":6,"column":4}},{"generated":{"line":13,"column":61},"source":"src/shaders/VertexLitParticle.js","original":{"line":6,"column":16}},{"generated":{"line":13,"column":69},"source":"src/shaders/VertexLitParticle.js","original":{"line":6,"column":4}},{"generated":{"line":13,"column":70},"source":"src/shaders/VertexLitParticle.js","original":{"line":5,"column":32}},{"generated":{"line":13,"column":72},"source":"src/shaders/VertexLitParticle.js","original":{"line":7,"column":4}},{"name":"pointSize","generated":{"line":14,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":8,"column":6}},{"name":"pointSize","generated":{"line":14,"column":6},"source":"src/shaders/VertexLitParticle.js","original":{"line":8,"column":6}},{"generated":{"line":14,"column":15},"source":"src/shaders/VertexLitParticle.js","original":{"line":8,"column":15}},{"generated":{"line":14,"column":17},"source":"src/shaders/VertexLitParticle.js","original":{"line":8,"column":17}},{"name":"value","generated":{"line":15,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":8,"column":19}},{"name":"value","generated":{"line":15,"column":8},"source":"src/shaders/VertexLitParticle.js","original":{"line":8,"column":19}},{"generated":{"line":15,"column":13},"source":"src/shaders/VertexLitParticle.js","original":{"line":8,"column":24}},{"generated":{"line":15,"column":15},"source":"src/shaders/VertexLitParticle.js","original":{"line":8,"column":26}},{"generated":{"line":16,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":8,"column":17}},{"generated":{"line":16,"column":7},"source":"src/shaders/VertexLitParticle.js","original":{"line":7,"column":4}},{"name":"decayModifier","generated":{"line":17,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":9,"column":6}},{"name":"decayModifier","generated":{"line":17,"column":6},"source":"src/shaders/VertexLitParticle.js","original":{"line":9,"column":6}},{"generated":{"line":17,"column":19},"source":"src/shaders/VertexLitParticle.js","original":{"line":9,"column":19}},{"generated":{"line":17,"column":21},"source":"src/shaders/VertexLitParticle.js","original":{"line":9,"column":21}},{"name":"value","generated":{"line":18,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":9,"column":23}},{"name":"value","generated":{"line":18,"column":8},"source":"src/shaders/VertexLitParticle.js","original":{"line":9,"column":23}},{"generated":{"line":18,"column":13},"source":"src/shaders/VertexLitParticle.js","original":{"line":9,"column":28}},{"generated":{"line":18,"column":15},"source":"src/shaders/VertexLitParticle.js","original":{"line":9,"column":30}},{"generated":{"line":19,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":9,"column":21}},{"generated":{"line":20,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":7,"column":4}},{"generated":{"line":20,"column":5},"source":"src/shaders/VertexLitParticle.js","original":{"line":5,"column":32}},{"generated":{"line":20,"column":6},"source":"src/shaders/VertexLitParticle.js","original":{"line":5,"column":12}},{"generated":{"line":20,"column":7},"source":"src/shaders/VertexLitParticle.js","original":{"line":3,"column":22}},{"name":"vertexShader","generated":{"line":21,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":12,"column":2}},{"name":"vertexShader","generated":{"line":21,"column":4},"source":"src/shaders/VertexLitParticle.js","original":{"line":12,"column":2}},{"generated":{"line":21,"column":16},"source":"src/shaders/VertexLitParticle.js","original":{"line":12,"column":14}},{"generated":{"line":21,"column":1489},"source":"src/shaders/VertexLitParticle.js","original":{"line":3,"column":22}},{"name":"fragmentShader","generated":{"line":22,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":61,"column":2}},{"name":"fragmentShader","generated":{"line":22,"column":4},"source":"src/shaders/VertexLitParticle.js","original":{"line":61,"column":2}},{"generated":{"line":22,"column":18},"source":"src/shaders/VertexLitParticle.js","original":{"line":61,"column":16}},{"generated":{"line":23,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":3,"column":22}},{"generated":{"line":23,"column":3},"source":"src/shaders/VertexLitParticle.js","original":{"line":3,"column":15}},{"generated":{"line":24,"column":0},"source":"src/shaders/VertexLitParticle.js","original":{"line":3,"column":15}}],"sources":{"src/shaders/VertexLitParticle.js":"import { UniformsUtils, UniformsLib } from 'three'\r\n\r\nexport default () => ({\r\n  lights: true,\r\n  uniforms: UniformsUtils.merge([\r\n    UniformsLib['lights'],\r\n    {\r\n      pointSize: { value: 2.0 },\r\n      decayModifier: { value: 1.0 },\r\n    },\r\n  ]),\r\n  vertexShader: `\r\n    #include <common>\r\n\r\n    struct PointLight {\r\n      vec3 position;\r\n      vec3 color;\r\n      float distance;\r\n      float decay;\r\n      int shadow;\r\n      float shadowBias;\r\n      float shadowRadius;\r\n      vec2 shadowMapSize;\r\n      float shadowCameraNear;\r\n      float shadowCameraFar;\r\n    };\r\n\r\n    uniform PointLight pointLights[NUM_POINT_LIGHTS];\r\n    uniform float pointSize;\r\n    uniform float decayModifier;\r\n\r\n    varying vec4 vColor;\r\n\r\n    float _punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\r\n    \tif( decayExponent > 0.0 ) {\r\n    \t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\r\n    \t}\r\n    \treturn 1.0;\r\n    }\r\n\r\n    void main()\r\n    {\r\n      vec4 worldPosition = modelMatrix * vec4(position, 1.0);\r\n      vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\r\n      gl_Position = projectionMatrix * modelViewPosition;\r\n\r\n      gl_PointSize = pointSize;\r\n      vec4 addedLights = vec4(0.1, 0.1, 0.1, 1.0);\r\n      for(int l = 0; l < NUM_POINT_LIGHTS; l++) {\r\n        float dist = distance(pointLights[l].position, modelViewPosition.xyz);\r\n        addedLights.rgb += pointLights[l].color *\r\n        _punctualLightIntensityToIrradianceFactor(\r\n            dist,\r\n            pointLights[l].distance,\r\n            pointLights[l].decay * decayModifier\r\n          );\r\n      }\r\n      vColor = addedLights;\r\n    }\r\n  `,\r\n  fragmentShader: `\r\n    varying vec4 vColor;\r\n\r\n    void main() {\r\n      gl_FragColor = vColor;\r\n    }\r\n  `,\r\n})\r\n"},"lineCount":null}},"error":null,"hash":"29df47153d9d5b3dee31113c5a276ae1","cacheData":{"env":{}}}
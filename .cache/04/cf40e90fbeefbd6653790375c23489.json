{"id":"src/shaders/Ripple.js","dependencies":[{"name":"C:\\Users\\Dev Seth\\Personal Programs\\website-examples\\3d-header\\final-result\\package.json","includedInParent":true,"mtime":1594046217713},{"name":"three","loc":{"line":1,"column":24},"parent":"C:\\Users\\Dev Seth\\Personal Programs\\website-examples\\3d-header\\final-result\\src\\shaders\\Ripple.js","resolved":"C:\\Users\\Dev Seth\\Personal Programs\\website-examples\\3d-header\\final-result\\node_modules\\three\\build\\three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _three = require(\"three\");\n\nvar _default = function _default() {\n  return {\n    uniforms: {\n      tDiffuse: {\n        value: null\n      },\n      tRipple: {\n        value: null\n      },\n      distort: {\n        value: new _three.Vector2(0.001, 0.001)\n      }\n    },\n    vertexShader: \"\\n    varying vec2 vUv;\\n    void main() {\\n      vUv = uv;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    }\\n  \",\n    fragmentShader: \"\\n    varying vec2 vUv;\\n\\n    uniform sampler2D tDiffuse;\\n    uniform sampler2D tRipple;\\n\\n    uniform vec2 distort;\\n    \\n    void main()\\n    {\\n      vec3 ripple = texture2D(tRipple, vUv).rgb;\\n\\n      vec2 distortOffset = normalize(vUv.xy - ripple.xy) * ripple.b + distort;\\n\\n      gl_FragColor = vec4(\\n        ripple.b + texture2D(tDiffuse, vUv + distortOffset).r ,\\n        ripple.b + texture2D(tDiffuse, vUv).g,\\n        ripple.b + texture2D(tDiffuse, vUv - distortOffset).b,\\n        1.0\\n      );\\n    }\\n  \"\n  };\n};\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/shaders/Ripple.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":15},"source":"src/shaders/Ripple.js","original":{"line":3,"column":15}},{"generated":{"line":11,"column":0},"source":"src/shaders/Ripple.js","original":{"line":3,"column":15}},{"generated":{"line":11,"column":9},"source":"src/shaders/Ripple.js","original":{"line":3,"column":22}},{"name":"uniforms","generated":{"line":12,"column":0},"source":"src/shaders/Ripple.js","original":{"line":4,"column":2}},{"name":"uniforms","generated":{"line":12,"column":4},"source":"src/shaders/Ripple.js","original":{"line":4,"column":2}},{"generated":{"line":12,"column":12},"source":"src/shaders/Ripple.js","original":{"line":4,"column":10}},{"generated":{"line":12,"column":14},"source":"src/shaders/Ripple.js","original":{"line":4,"column":12}},{"name":"tDiffuse","generated":{"line":13,"column":0},"source":"src/shaders/Ripple.js","original":{"line":5,"column":4}},{"name":"tDiffuse","generated":{"line":13,"column":6},"source":"src/shaders/Ripple.js","original":{"line":5,"column":4}},{"generated":{"line":13,"column":14},"source":"src/shaders/Ripple.js","original":{"line":5,"column":12}},{"generated":{"line":13,"column":16},"source":"src/shaders/Ripple.js","original":{"line":5,"column":14}},{"name":"value","generated":{"line":14,"column":0},"source":"src/shaders/Ripple.js","original":{"line":5,"column":16}},{"name":"value","generated":{"line":14,"column":8},"source":"src/shaders/Ripple.js","original":{"line":5,"column":16}},{"generated":{"line":14,"column":13},"source":"src/shaders/Ripple.js","original":{"line":5,"column":21}},{"generated":{"line":14,"column":15},"source":"src/shaders/Ripple.js","original":{"line":5,"column":23}},{"generated":{"line":15,"column":0},"source":"src/shaders/Ripple.js","original":{"line":5,"column":14}},{"generated":{"line":15,"column":7},"source":"src/shaders/Ripple.js","original":{"line":4,"column":12}},{"name":"tRipple","generated":{"line":16,"column":0},"source":"src/shaders/Ripple.js","original":{"line":6,"column":4}},{"name":"tRipple","generated":{"line":16,"column":6},"source":"src/shaders/Ripple.js","original":{"line":6,"column":4}},{"generated":{"line":16,"column":13},"source":"src/shaders/Ripple.js","original":{"line":6,"column":11}},{"generated":{"line":16,"column":15},"source":"src/shaders/Ripple.js","original":{"line":6,"column":13}},{"name":"value","generated":{"line":17,"column":0},"source":"src/shaders/Ripple.js","original":{"line":6,"column":15}},{"name":"value","generated":{"line":17,"column":8},"source":"src/shaders/Ripple.js","original":{"line":6,"column":15}},{"generated":{"line":17,"column":13},"source":"src/shaders/Ripple.js","original":{"line":6,"column":20}},{"generated":{"line":17,"column":15},"source":"src/shaders/Ripple.js","original":{"line":6,"column":22}},{"generated":{"line":18,"column":0},"source":"src/shaders/Ripple.js","original":{"line":6,"column":13}},{"generated":{"line":18,"column":7},"source":"src/shaders/Ripple.js","original":{"line":4,"column":12}},{"name":"distort","generated":{"line":19,"column":0},"source":"src/shaders/Ripple.js","original":{"line":7,"column":4}},{"name":"distort","generated":{"line":19,"column":6},"source":"src/shaders/Ripple.js","original":{"line":7,"column":4}},{"generated":{"line":19,"column":13},"source":"src/shaders/Ripple.js","original":{"line":7,"column":11}},{"generated":{"line":19,"column":15},"source":"src/shaders/Ripple.js","original":{"line":7,"column":13}},{"name":"value","generated":{"line":20,"column":0},"source":"src/shaders/Ripple.js","original":{"line":7,"column":15}},{"name":"value","generated":{"line":20,"column":8},"source":"src/shaders/Ripple.js","original":{"line":7,"column":15}},{"generated":{"line":20,"column":13},"source":"src/shaders/Ripple.js","original":{"line":7,"column":20}},{"generated":{"line":20,"column":15},"source":"src/shaders/Ripple.js","original":{"line":7,"column":22}},{"name":"Vector2","generated":{"line":20,"column":19},"source":"src/shaders/Ripple.js","original":{"line":7,"column":26}},{"generated":{"line":20,"column":33},"source":"src/shaders/Ripple.js","original":{"line":7,"column":22}},{"generated":{"line":20,"column":34},"source":"src/shaders/Ripple.js","original":{"line":7,"column":34}},{"generated":{"line":20,"column":39},"source":"src/shaders/Ripple.js","original":{"line":7,"column":22}},{"generated":{"line":20,"column":41},"source":"src/shaders/Ripple.js","original":{"line":7,"column":41}},{"generated":{"line":20,"column":46},"source":"src/shaders/Ripple.js","original":{"line":7,"column":22}},{"generated":{"line":21,"column":0},"source":"src/shaders/Ripple.js","original":{"line":7,"column":13}},{"generated":{"line":22,"column":0},"source":"src/shaders/Ripple.js","original":{"line":4,"column":12}},{"generated":{"line":22,"column":5},"source":"src/shaders/Ripple.js","original":{"line":3,"column":22}},{"name":"vertexShader","generated":{"line":23,"column":0},"source":"src/shaders/Ripple.js","original":{"line":9,"column":2}},{"name":"vertexShader","generated":{"line":23,"column":4},"source":"src/shaders/Ripple.js","original":{"line":9,"column":2}},{"generated":{"line":23,"column":16},"source":"src/shaders/Ripple.js","original":{"line":9,"column":14}},{"generated":{"line":23,"column":169},"source":"src/shaders/Ripple.js","original":{"line":3,"column":22}},{"name":"fragmentShader","generated":{"line":24,"column":0},"source":"src/shaders/Ripple.js","original":{"line":16,"column":2}},{"name":"fragmentShader","generated":{"line":24,"column":4},"source":"src/shaders/Ripple.js","original":{"line":16,"column":2}},{"generated":{"line":24,"column":18},"source":"src/shaders/Ripple.js","original":{"line":16,"column":16}},{"generated":{"line":25,"column":0},"source":"src/shaders/Ripple.js","original":{"line":3,"column":22}},{"generated":{"line":25,"column":3},"source":"src/shaders/Ripple.js","original":{"line":3,"column":15}},{"generated":{"line":26,"column":0},"source":"src/shaders/Ripple.js","original":{"line":3,"column":15}}],"sources":{"src/shaders/Ripple.js":"import { Vector2 } from 'three'\r\n\r\nexport default () => ({\r\n  uniforms: {\r\n    tDiffuse: { value: null },\r\n    tRipple: { value: null },\r\n    distort: { value: new Vector2(0.001, 0.001) }\r\n  },\r\n  vertexShader: `\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n    }\r\n  `,\r\n  fragmentShader: `\r\n    varying vec2 vUv;\r\n\r\n    uniform sampler2D tDiffuse;\r\n    uniform sampler2D tRipple;\r\n\r\n    uniform vec2 distort;\r\n    \r\n    void main()\r\n    {\r\n      vec3 ripple = texture2D(tRipple, vUv).rgb;\r\n\r\n      vec2 distortOffset = normalize(vUv.xy - ripple.xy) * ripple.b + distort;\r\n\r\n      gl_FragColor = vec4(\r\n        ripple.b + texture2D(tDiffuse, vUv + distortOffset).r ,\r\n        ripple.b + texture2D(tDiffuse, vUv).g,\r\n        ripple.b + texture2D(tDiffuse, vUv - distortOffset).b,\r\n        1.0\r\n      );\r\n    }\r\n  `,\r\n})\r\n"},"lineCount":null}},"error":null,"hash":"b5c185948109e7cf9a88f6495a46dea1","cacheData":{"env":{}}}
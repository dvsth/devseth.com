{"id":"kW7a","dependencies":[{"name":"/Users/dvsth/Code/devseth.com/package.json","includedInParent":true,"mtime":1612397970111},{"name":"three","loc":{"line":1,"column":24},"parent":"/Users/dvsth/Code/devseth.com/src/shaders/VolumetricLightScattering.js","resolved":"/Users/dvsth/Code/devseth.com/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=require(\"three\"),n=function(){return{uniforms:{tDiffuse:{value:null},lightPosition:{value:new e.Vector2(.5,.5)},exposure:{value:.2},decay:{value:.96},density:{value:.6},weight:{value:.2},samples:{value:80}},vertexShader:\"\\n    varying vec2 vUv;\\n\\n    void main() {\\n      vUv = uv;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    }\\n  \",fragmentShader:\"\\n    varying vec2 vUv;\\n    uniform sampler2D tDiffuse;\\n    uniform vec2 lightPosition;\\n    uniform float exposure;\\n    uniform float decay;\\n    uniform float density;\\n    uniform float weight;\\n    uniform int samples;\\n    const int MAX_SAMPLES = 100;\\n\\n    void main() {\\n      vec2 texCoord = vUv;\\n      vec2 deltaTextCoord = texCoord - lightPosition;\\n      deltaTextCoord *= 1.0 / float(samples) * density;\\n      vec4 color = texture2D(tDiffuse, texCoord);\\n      float a = color.a;\\n      float illuminationDecay = 1.0;\\n      for(int i=0; i < MAX_SAMPLES; i++) {\\n        if(i == samples) {\\n          break;\\n        }\\n        texCoord -= deltaTextCoord;\\n        vec4 sample = texture2D(tDiffuse, texCoord);\\n        sample *= illuminationDecay * weight;\\n        color += sample;\\n        illuminationDecay *= decay;\\n      }\\n      gl_FragColor = color * exposure;\\n    }\\n  \"}};exports.default=n;"},"sourceMaps":{"js":{"mappings":[{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":0}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":13}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":20}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":35}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":43}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":56}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":57}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":64}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":68}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":76}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":89}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":1,"column":0},"generated":{"line":1,"column":105}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":114}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":116}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":22},"generated":{"line":1,"column":127}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":22},"generated":{"line":1,"column":133}},{"source":"src/shaders/VolumetricLightScattering.js","name":"uniforms","original":{"line":4,"column":2},"generated":{"line":1,"column":134}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":4,"column":12},"generated":{"line":1,"column":143}},{"source":"src/shaders/VolumetricLightScattering.js","name":"tDiffuse","original":{"line":5,"column":4},"generated":{"line":1,"column":144}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":5,"column":14},"generated":{"line":1,"column":153}},{"source":"src/shaders/VolumetricLightScattering.js","name":"value","original":{"line":5,"column":16},"generated":{"line":1,"column":154}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":5,"column":23},"generated":{"line":1,"column":160}},{"source":"src/shaders/VolumetricLightScattering.js","name":"lightPosition","original":{"line":6,"column":4},"generated":{"line":1,"column":166}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":6,"column":19},"generated":{"line":1,"column":180}},{"source":"src/shaders/VolumetricLightScattering.js","name":"value","original":{"line":6,"column":21},"generated":{"line":1,"column":181}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":6,"column":28},"generated":{"line":1,"column":187}},{"source":"src/shaders/VolumetricLightScattering.js","name":"Vector2","original":{"line":6,"column":32},"generated":{"line":1,"column":191}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":6,"column":28},"generated":{"line":1,"column":193}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":6,"column":40},"generated":{"line":1,"column":201}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":6,"column":45},"generated":{"line":1,"column":204}},{"source":"src/shaders/VolumetricLightScattering.js","name":"exposure","original":{"line":7,"column":4},"generated":{"line":1,"column":209}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":7,"column":14},"generated":{"line":1,"column":218}},{"source":"src/shaders/VolumetricLightScattering.js","name":"value","original":{"line":7,"column":16},"generated":{"line":1,"column":219}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":7,"column":23},"generated":{"line":1,"column":225}},{"source":"src/shaders/VolumetricLightScattering.js","name":"decay","original":{"line":8,"column":4},"generated":{"line":1,"column":229}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":8,"column":11},"generated":{"line":1,"column":235}},{"source":"src/shaders/VolumetricLightScattering.js","name":"value","original":{"line":8,"column":13},"generated":{"line":1,"column":236}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":8,"column":20},"generated":{"line":1,"column":242}},{"source":"src/shaders/VolumetricLightScattering.js","name":"density","original":{"line":9,"column":4},"generated":{"line":1,"column":247}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":9,"column":13},"generated":{"line":1,"column":255}},{"source":"src/shaders/VolumetricLightScattering.js","name":"value","original":{"line":9,"column":15},"generated":{"line":1,"column":256}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":9,"column":22},"generated":{"line":1,"column":262}},{"source":"src/shaders/VolumetricLightScattering.js","name":"weight","original":{"line":10,"column":4},"generated":{"line":1,"column":266}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":10,"column":12},"generated":{"line":1,"column":273}},{"source":"src/shaders/VolumetricLightScattering.js","name":"value","original":{"line":10,"column":14},"generated":{"line":1,"column":274}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":10,"column":21},"generated":{"line":1,"column":280}},{"source":"src/shaders/VolumetricLightScattering.js","name":"samples","original":{"line":11,"column":4},"generated":{"line":1,"column":284}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":11,"column":13},"generated":{"line":1,"column":292}},{"source":"src/shaders/VolumetricLightScattering.js","name":"value","original":{"line":11,"column":15},"generated":{"line":1,"column":293}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":11,"column":22},"generated":{"line":1,"column":299}},{"source":"src/shaders/VolumetricLightScattering.js","name":"vertexShader","original":{"line":13,"column":2},"generated":{"line":1,"column":304}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":22},"generated":{"line":1,"column":317}},{"source":"src/shaders/VolumetricLightScattering.js","name":"fragmentShader","original":{"line":21,"column":2},"generated":{"line":1,"column":471}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":21,"column":16},"generated":{"line":1,"column":486}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":1388}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":1396}},{"source":"src/shaders/VolumetricLightScattering.js","original":{"line":3,"column":15},"generated":{"line":1,"column":1404}}],"sources":{"src/shaders/VolumetricLightScattering.js":"import { Vector2 } from 'three'\n\nexport default () => ({\n  uniforms: {\n    tDiffuse: { value: null },\n    lightPosition: { value: new Vector2(0.5, 0.5) },\n    exposure: { value: 0.2 },\n    decay: { value: 0.96 },\n    density: { value: 0.6 },\n    weight: { value: 0.2 },\n    samples: { value: 80 },\n  },\n  vertexShader: `\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    varying vec2 vUv;\n    uniform sampler2D tDiffuse;\n    uniform vec2 lightPosition;\n    uniform float exposure;\n    uniform float decay;\n    uniform float density;\n    uniform float weight;\n    uniform int samples;\n    const int MAX_SAMPLES = 100;\n\n    void main() {\n      vec2 texCoord = vUv;\n      vec2 deltaTextCoord = texCoord - lightPosition;\n      deltaTextCoord *= 1.0 / float(samples) * density;\n      vec4 color = texture2D(tDiffuse, texCoord);\n      float a = color.a;\n      float illuminationDecay = 1.0;\n      for(int i=0; i < MAX_SAMPLES; i++) {\n        if(i == samples) {\n          break;\n        }\n        texCoord -= deltaTextCoord;\n        vec4 sample = texture2D(tDiffuse, texCoord);\n        sample *= illuminationDecay * weight;\n        color += sample;\n        illuminationDecay *= decay;\n      }\n      gl_FragColor = color * exposure;\n    }\n  `,\n})\n"},"lineCount":null}},"error":null,"hash":"6a7d2b66a0bac5882aa03f59d0df9466","cacheData":{"env":{}}}